rootProject.ext.gradle_base_sdk this

def jarName = "analysys_push_sdk.jar";
def release = "${project.rootDir}" + '/release/'
def proguardJar = 'analysys_push_' + "${rootProject.ext.sdkVer}_${rootProject.ext.time}" + '.jar'

task buildPushJar(type: Jar, dependsOn: ['build']) {
    archiveFileName = jarName
    from('build/intermediates/javac/release/classes')
    destinationDirectory = file(release)
    exclude('com/scott/hellolib/BuildConfig.class')
    exclude('com/scott/hellolib/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
}
/**
 * 混淆jar包
 */
def androidSDKDir = project.android.sdkDirectory.absolutePath
def androidJarDir = androidSDKDir.toString() + '/platforms/' + "${android.compileSdkVersion}" + '/android.jar'
task makePushJar(type: proguard.gradle.ProGuardTask, dependsOn: 'buildPushJar') {
    injars(release + jarName)
    outjars(release + proguardJar)
    configuration 'proguard-rules.pro'
    libraryjars(androidJarDir)
    dontshrink

    doLast {
        delete release + jarName
    }
}